buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.1.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE"
        classpath "gradle.plugin.com.boxfuse.client:gradle-plugin-publishing:5.0.7"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "org.junit.platform.gradle.plugin"
apply plugin: "org.springframework.boot"

apply {
    from("tasks/flyway.gradle")
    from("tasks/test-coverage.gradle")
    from("tasks/checkstyle.gradle")
    from("tasks/sonarqube.gradle")
    from("tasks/git-hooks.gradle")
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    providedRuntime
}

ext {

    jjwtVersion = "0.9.0"
    mysqlConnectorVersion = "6.0.6"
    mybatisVersion = "1.3.2"
    lombokVersion = "1.16.20"
    springExtensionVersion = "1.0.3"
    flywayVersion = "5.1.4"
    logstashVersion = "4.9"

    junitJupiterVersion = "5.1.0"
    junitPlatformVersion = "1.1.0"
    springMockMvCVersion = "2.9.0"
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("io.jsonwebtoken:jjwt:${jjwtVersion}")
    compile("org.flywaydb:flyway-core:${flywayVersion}")


    compile("mysql:mysql-connector-java:${mysqlConnectorVersion}")
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisVersion}")

    compile("org.projectlombok:lombok:${lombokVersion}")
    compile("net.logstash.logback:logstash-logback-encoder:${logstashVersion}")


    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile('org.springframework.security:spring-security-test')
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")
    testCompile("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
    testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")
    testCompile("com.jayway.restassured:spring-mock-mvc:${springMockMvCVersion}")
    testCompile("com.github.sbrannen:spring-test-junit5:${springExtensionVersion}")
}


def env = project.hasProperty("env") ? env : "local"

bootRun.systemProperty "spring.profiles.active", env

bootRun.dependsOn flywayMigrate
